16
{"last_modification_time":1546029118,"language":2,"import_file":"c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/main.h","args_hash":14444592582462952662,"includes":[{"line":22,"resolved_path":"c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/vision.h"}],"dependencies":["c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/main.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/api.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/adi.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/llemu.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lvgl.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_task.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_ll.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_mem.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_hal/lv_hal.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_hal/lv_hal_disp.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_color.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_hal/lv_hal_indev.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_area.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_hal/lv_hal_tick.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_core/lv_group.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_core/lv_obj.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_core/lv_style.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_anim.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_font.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_fonts/lv_symbol_def.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_core/lv_vdb.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_themes/lv_theme.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_themes/lv_theme_alien.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_bar.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_btn.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_core/lv_indev.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_cont.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_label.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_txt.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_btnm.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_cb.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_chart.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_line.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_ddlist.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_page.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_gauge.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_lmeter.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_img.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_draw/lv_draw.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_misc/lv_fs.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_kb.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_led.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_list.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_mbox.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_roller.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_slider.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_sw.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_ta.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_tabview.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_objx/lv_win.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/misc.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/motors.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/rtos.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/vision.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/adi.hpp","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/llemu.hpp","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/misc.hpp","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/motors.hpp","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/rtos.hpp","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/pros/colors.h","c:/users/james ackerman/desktop/vexu/codigo vex/pros/aon-turning-point/code/big-robot/include/display/lv_conf.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"27:11-27:15|-1|1|2","extent":"27:1-370:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["27:11-27:15|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":7239257784389765794,"detailed_name":"pros::Vision","short_name_offset":6,"short_name_size":6,"kind":5,"hover":"","comments":"","declarations":["38:2-38:8|-1|1|4"],"spell":"28:7-28:13|0|2|2","extent":"28:1-369:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"vars":[1],"instances":[],"uses":["38:2-38:8|2|2|4"]},{"id":3,"usr":9788203688400783454,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["38:28-38:43|-1|1|4"]},{"id":4,"usr":6897733792262537382,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["75:2-75:21|-1|1|4","135:67-135:86|-1|1|4"]},{"id":5,"usr":14321710750847391103,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["95:2-95:19|-1|1|4","116:2-116:19|-1|1|4","135:2-135:19|-1|1|4"]},{"id":6,"usr":7070007899884238877,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["169:2-169:22|-1|1|4"]},{"id":7,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1],"uses":[]}],"funcs":[{"id":0,"usr":9799092288797046328,"detailed_name":"void pros::Vision::Vision(int port, pros::vision_zero_e_t zero_point)","short_name_offset":11,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"\r\nCreate a Vision Sensor object on the given port.\r\n\r\n\\param port\r\n       The V5 port number from 1-21\r\n\\param zero_point\r\n       One of vision_zero_e_t to set the (0,0) coordinate for the FOV","declarations":[{"spell":"38:2-38:8|2|2|1","param_spellings":["38:22-38:26","38:44-38:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":3287806801487354605,"detailed_name":"int pros::Vision::clear_led() const","short_name_offset":18,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\nClears the vision sensor LED color, reseting it back to its default\r\nbehavior, displaying the most prominent object signature color.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"51:15-51:24|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":10458271041088496072,"detailed_name":"pros::vision_color_code_t pros::Vision::create_color_code(const int sig_id1, const int sig_id2, const int sig_id3, const int sig_id4, const int sig_id5) const","short_name_offset":40,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\r\nCreates a color code that represents a combination of the given signature\r\nIDs.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEINVAL - Fewer than two signatures have been provided, or one of the\r\n         signatures is out of its [1-7] range.\r\n\r\n\\param sig_id1\r\n       The first signature id [1-7] to add to the color code\r\n\\param sig_id2\r\n       The second signature id [1-7] to add to the color code\r\n\\param sig_id3\r\n       The third signature id [1-7] to add to the color code\r\n\\param sig_id4\r\n       The fourth signature id [1-7] to add to the color code\r\n\\param sig_id5\r\n       The fifth signature id [1-7] to add to the color code\r\n\r\n\\return A vision_color_code_t object containing the color code information.","declarations":[{"spell":"75:22-75:39|2|2|1","param_spellings":["75:60-75:67","75:89-75:96","76:60-76:67","76:93-76:100","77:60-77:67"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":5042803706445856669,"detailed_name":"pros::vision_object_s_t pros::Vision::get_by_size(const int size_id) const","short_name_offset":38,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the nth largest object according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\nEDOM - size_id is greater than the number of available objects.\r\nEHOSTDOWN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\r\n\\return The vision_object_s_t object corresponding to the given size id, or\r\nPROS_ERR if an error occurred.","declarations":[{"spell":"95:20-95:31|2|2|1","param_spellings":["95:52-95:59"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":12649061969495691923,"detailed_name":"pros::vision_object_s_t pros::Vision::get_by_sig(const int size_id, const int sig_id) const","short_name_offset":38,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the nth largest object of the given signature according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\nEDOM - size_id is greater than the number of available objects.\r\nEHOSTDOWN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param signature\r\n       The vision_signature_s_t signature for which an object will be\r\n       returned.\r\n\r\n\\return The vision_object_s_t object corresponding to the given signature\r\nand size_id, or PROS_ERR if an error occurred.","declarations":[{"spell":"116:20-116:30|2|2|1","param_spellings":["116:51-116:58","116:80-116:86"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":4021391314319839397,"detailed_name":"pros::vision_object_s_t pros::Vision::get_by_code(const int size_id, const pros::vision_color_code_t color_code) const","short_name_offset":38,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the nth largest object of the given color code according to size_id.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\nEAGAIN - Reading the Vision Sensor failed for an unknown reason.\r\n\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param color_code\r\n       The vision_color_code_t for which an object will be returned\r\n\r\n\\return The vision_object_s_t object corresponding to the given color code\r\nand size_id, or PROS_ERR if an error occurred.","declarations":[{"spell":"135:20-135:31|2|2|1","param_spellings":["135:52-135:59","135:87-135:97"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":17429898597144172329,"detailed_name":"int pros::Vision::get_exposure() const","short_name_offset":18,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the exposure parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\return The current exposure percentage parameter from [0,100],\r\nPROS_ERR if an error occurred","declarations":[{"spell":"147:15-147:27|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":12756621335468970349,"detailed_name":"int pros::Vision::get_object_count() const","short_name_offset":18,"short_name_size":16,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the number of objects currently detected by the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\return The number of objects detected on the specified vision sensor.\r\nReturns PROS_ERR if the port was invalid or an error occurred.","declarations":[{"spell":"159:15-159:31|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":4032459261591852821,"detailed_name":"pros::vision_signature_s_t pros::Vision::get_signature(const int signature_id) const","short_name_offset":41,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nGets the object detection signature with the given id number.\r\n\r\n\\param signature_id\r\n       The signature id to read\r\n\r\n\\return A vision_signature_s_t containing information about the signature.","declarations":[{"spell":"169:23-169:36|2|2|1","param_spellings":["169:56-169:68"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":5100197035954073003,"detailed_name":"int pros::Vision::get_white_balance() const","short_name_offset":18,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\r\nGet the white balance parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\return The current RGB white balance setting of the sensor","declarations":[{"spell":"180:15-180:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":8815881694664028672,"detailed_name":"int pros::Vision::read_by_size(const int size_id, const int object_count, pros::vision_object_s_t *const object_arr) const","short_name_offset":18,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\nEDOM - size_id is greater than the number of available objects.\r\n\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param object_count\r\n       The number of objects to read\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"204:15-204:27|2|2|1","param_spellings":["204:48-204:55","204:77-204:89","205:53-205:63"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":8805582172455507232,"detailed_name":"int pros::Vision::read_by_sig(const int size_id, const int sig_id, const int object_count, pros::vision_object_s_t *const object_arr) const","short_name_offset":18,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\nEDOM - size_id is greater than the number of available objects.\r\nEHOSTDOWN - Reading the vision sensor failed for an unknown reason.\r\n\r\n\\param object_count\r\n       The number of objects to read\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param signature\r\n       The vision_signature_s_t signature for which an object will be\r\n       returned.\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"233:15-233:26|2|2|1","param_spellings":["233:47-233:54","233:76-233:82","233:104-233:116","234:52-234:62"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":5137626147389717077,"detailed_name":"int pros::Vision::read_by_code(const int size_id, const pros::vision_color_code_t color_code, const int object_count, pros::vision_object_s_t *const object_arr) const","short_name_offset":18,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nReads up to object_count object descriptors into object_arr.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEINVAL - Fewer than object_count number of objects were found.\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param object_count\r\n       The number of objects to read\r\n\\param size_id\r\n       The object to read from a list roughly ordered by object size\r\n       (0 is the largest item, 1 is the second largest, etc.)\r\n\\param color_code\r\n       The vision_color_code_t for which objects will be returned\r\n\\param[out] object_arr\r\n            A pointer to copy the objects into\r\n\r\n\\return The number of object signatures copied. This number will be less than\r\nobject_count if there are fewer objects detected by the vision sensor.\r\nReturns PROS_ERR if the port was invalid, an error occurred, or fewer objects\r\nthan size_id were found. All objects in object_arr that were not found are\r\ngiven VISION_OBJECT_ERR_SIG as their signature.","declarations":[{"spell":"260:10-260:22|2|2|1","param_spellings":["260:43-260:50","260:78-260:88","261:43-261:55","261:82-261:92"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":12558682029866205181,"detailed_name":"int pros::Vision::print_signature(const pros::vision_signature_s_t sig)","short_name_offset":18,"short_name_size":15,"kind":254,"storage":3,"hover":"","comments":"\r\nPrints the contents of the signature as an initializer list to the terminal.\r\n\r\n\\param sig\r\n       The signature for which the contents will be printed\r\n\r\n\\return 1 if no errors occured, PROS_ERR otherwise","declarations":[{"spell":"271:22-271:37|2|2|1","param_spellings":["271:65-271:68"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":15337262280507904135,"detailed_name":"int pros::Vision::set_auto_white_balance(const int enable) const","short_name_offset":18,"short_name_size":22,"kind":6,"storage":1,"hover":"","comments":"\r\nEnables/disables auto white-balancing on the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param enabled\r\n\t\t    Pass 0 to disable, 1 to enable\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"286:15-286:37|2|2|1","param_spellings":["286:57-286:63"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":5949910997410818454,"detailed_name":"int pros::Vision::set_exposure(const int percent) const","short_name_offset":18,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the exposure parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param percent\r\n       The new exposure percentage from [0,100]\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"301:15-301:27|2|2|1","param_spellings":["301:47-301:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":16177727392742890373,"detailed_name":"int pros::Vision::set_led(const int rgb) const","short_name_offset":18,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the vision sensor LED color, overriding the automatic behavior.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param rgb\r\n       An RGB code to set the LED to\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"316:15-316:22|2|2|1","param_spellings":["316:42-316:45"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":1763937842429211688,"detailed_name":"int pros::Vision::set_signature(const int signature_id, pros::vision_signature_s_t *const signature_ptr) const","short_name_offset":18,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\nStores the supplied object detection signature onto the vision sensor.\r\n\r\nNOTE: This saves the signature in volatile memory, and the signature will be\r\nlost as soon as the sensor is powered down.\r\n\r\n\\param signature_id\r\n       The signature id to store into\r\n\\param[in] signature_ptr\r\n           A pointer to the signature to save\r\n\r\n\\return 1 if no errors occured, PROS_ERR otherwise","declarations":[{"spell":"331:15-331:28|2|2|1","param_spellings":["331:48-331:60","331:90-331:103"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":14107165278035473702,"detailed_name":"int pros::Vision::set_white_balance(const int rgb) const","short_name_offset":18,"short_name_size":17,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the white balance parameter of the Vision Sensor.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param rgb\r\n       The new RGB white balance setting of the sensor\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"346:15-346:32|2|2|1","param_spellings":["346:52-346:55"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":6800607853249452293,"detailed_name":"int pros::Vision::set_zero_point(pros::vision_zero_e_t zero_point) const","short_name_offset":18,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\r\nSets the (0,0) coordinate for the Field of View.\r\n\r\nThis will affect the coordinates returned for each request for a\r\nvision_object_s_t from the sensor, so it is recommended that this function\r\nonly be used to configure the sensor at the beginning of its use.\r\n\r\nThis function uses the following values of errno when an error state is\r\nreached:\r\nEACCES - Another resource is currently trying to access the port.\r\n\r\n\\param zero_point\r\n       One of vision_zero_e_t to set the (0,0) coordinate for the FOV\r\n\r\n\\return 1 if the operation was successful or PROS_ERR if the operation\r\nfailed, setting errno.","declarations":[{"spell":"365:15-365:29|2|2|1","param_spellings":["365:46-365:56"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":10207291336165649106,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["38:57-38:78|2|2|4"],"kind":0,"storage":0},{"id":1,"usr":2543721480233637720,"detailed_name":"int pros::Vision::_port","short_name_offset":18,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"368:15-368:20|2|2|2","extent":"368:2-368:20|2|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":2,"usr":4318157957283604779,"detailed_name":"_PROS_VISION_HPP_","short_name_offset":0,"short_name_size":17,"hover":"#define _PROS_VISION_HPP_","comments":"","declarations":[],"spell":"21:9-21:26|-1|1|2","extent":"21:9-21:26|-1|1|0","uses":[],"kind":255,"storage":0}]}